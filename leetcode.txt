// Calculate the remainder when num is divided by k
// The formula(((num % k) + k) % k) ensures that the remainder is non-negative


// Formulae to update Indexes in circular data structures is:
// front = (front - 1 + K) % K; (K: Size of the DataStructure)
// back = (back + 1) % K; (K: Size of the DataStructure)


If we are asked All possible permutation / combination / subsets means backtracking
backtracking is 
1. do something
2. explore
3. revert step 1 and further explore


deque front and back operation in O(1) Time


stringStream method similar to Cin>> 

In interval based problems .. if not sorted Try ki sort karlo before solving based on starting or ending or both 

Expression evaluate / parenthesis always use stack

If we are exploring options means different flows / paths means there is Recursion

All possible substring subsets etc ... Backtracking

Backtracking = 1.Do 2.Explore 3.Undo

BT Problems Recursion Zindabad, Recursion Leap of FAITH

Number of Bits to represent a Number : Floor of Log2(N) + 1

All bitwise operations, like XOR, AND, and OR, operate directly on the binary representations of numbers

Cummulative OR is always non decreasing either stays the same or increases

BFS: Shortest Path / Minimum Moves / Unweighted Graph
DFS: 

Approach BFS
1. Start State in Queue -> Input the Start and if it's a 2D Matrix etc... rather than having a complex queue input the Start Input as a String 
2. If we input a state as a string into a queue, we can map all the possible moves of an object (or entity) as needed from a 2D matrix. By using string representation, we can effectively translate as a 2D Matrix and also reconstruct if required
3. Fix the Target maybe a Final State / String
4. Perform BFS

2 TYPES OF BFS CODE: 
A. When we want to find LEVEL Info: Level by Level traversal i.e. Find que.size() and then check all the elements at a level if that the required one, if not push all the states in queue and move ahead

- used in question 0773 2D arrays leetcode 

B. Normal BFS unless que is not empty take the front element pop it and check and so on 

